This is rsa version 2.0. In our class project of parallel programming we are trying to compare RSA algorithm using multiple different parallel programming approach. 1). Sequintial programming 2). Message passing interface and, 3). Open MP. We are expecting MPI and openMP should work better than that of sequential program. We will benchmark all three programs and will see the execution time and compare the result. In our program we have fixed value of two primes which will help us to find e and d. Eventhough we can find multiple choices of e and d , we will choose the 1st one. The public key will be PU[e, n] and the private key will be PR[d, n]. First we will find e and d based on the RSA alorithm. Then using those e and d we will encrypt and decrypt the text file nnd finally print the outputs. We are going to use gproof to find out which function takes more time to execute and try to parallelize that time consuming function. In or case itd decrypt() function. While experimenting we found that sequential programming works better for small size of data because communication overhead is zero. However, in case of parallel programming the communication overhead is high. So, communication overhead outweighes the computation overhead. Thus we decided to increase the size of data that needed to be parallelize. 